<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo</title>
      <link href="/Hexo/"/>
      <url>/Hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli</title>
      <link href="/vue-cli/"/>
      <url>/vue-cli/</url>
      
        <content type="html"><![CDATA[<p>Vue.js 开发的标准工具</p><a id="more"></a><h2 id="vue-cli脚手架的安装"><a href="#vue-cli脚手架的安装" class="headerlink" title="vue-cli脚手架的安装"></a>vue-cli脚手架的安装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"># OR</span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><hr><h2 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h2><p><code>vue create hello-world</code></p><hr><h3 id="项目搭建过程"><a href="#项目搭建过程" class="headerlink" title="项目搭建过程"></a>项目搭建过程</h3><ol><li><p>命令行输入<code>vue create 文件名</code><br><img src="../image/vuecli1.png" alt=""></p><ul><li><p>Please pick a preset: (Use arrow keys) preset是之前预设过的配置(如果没有选择下面两个选项, 如果有选择直接安装)enter</p></li><li><p>default (babel, eslint): 默认配置(直接enter)非常适合快速创建一个新的项目的原型, 但是没有带任何辅助功能的npm包</p></li><li><p>Manually select feature: 手动配置(按下方向键↓调换选项)是我们所需要的面向生产的项目，提供可选择的npm包</p></li></ul></li><li><p>vue配置 (方向键↑和↓进行切换，空格键进行确定)<br><img src="../image/vuecli2.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">? Please pick a preset: Manually select features</span><br><span class="line">? Check the features needed <span class="keyword">for</span> your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)</span><br><span class="line">&gt;(*) Babel  <span class="comment">// Babel 是一个 JavaScript 编译器</span></span><br><span class="line">( ) TypeScript <span class="comment">// javaScript的超集</span></span><br><span class="line">( ) Progressive Web App (PWA) Support <span class="comment">// 渐变式web应用程序</span></span><br><span class="line">( ) Router <span class="comment">// vue-router(vue路由)</span></span><br><span class="line">( ) Vuex <span class="comment">// vuex(vue的状态管理模式)</span></span><br><span class="line">( ) CSS Pre-processors <span class="comment">// css 预处理器</span></span><br><span class="line">(*) Linter / Formatter <span class="comment">// 代码风险检测和格式化(如：Eslnt)</span></span><br><span class="line">( ) Unit Testing <span class="comment">// 单元测试</span></span><br><span class="line">( ) E2E Testing <span class="comment">// e2e测试</span></span><br></pre></td></tr></table></figure></li><li><p>Router<br><img src="../image/vuecli3.png" alt=""></p><ul><li>首先会让你选择是否使用history router: Vue-Router有两种模式分别是hash和history(建议选择no), 这样直接可以使用， 如果想使用可以查看下面的方法尽享配置</li><li>如果想切换到history模式,在路由中填上如下代码:<a href="https://router.vuejs.org/zh/guide/essentials/history-mode.html" target="_blank" rel="noopener">具体配置</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [...]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>CSS Pre-processors(根据自己的需要选择配置)<br><img src="../image/vuecli4.png" alt=""></p><ul><li>Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目</li><li>Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言。包含了 Less 语言以及利用 JavaScript 开发的用于将 Less 样式转换成 CSS 样式的 Less.js 工具。</li><li>Stylus - 富有表现力的、动态的、健壮的CSS</li></ul></li><li><p>Linter / Formatter(如下是代码检测错误的不同版本, 根据自己的需要选择配置)<br><img src="../image/vuecli5.png" alt=""></p><ul><li>ESLint with error prevention only(仅仅给你报语法上的错误，不给你代码进行规范)</li><li>ESLint + Airbnb config(这三个选项不仅有语法错误上的提示，而且有自己不同的代码规范原则，想进行具体了解，自行看官方文档)<br>ESLint + Standard config<br>ESLint + Prettier</li></ul></li><li><p>把babel,postcss,eslint这些配置文件放哪：(建议选择In dedicated config files，这样不会时package.json太过杂乱)<br><img src="../image/vuecli6.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? Where <span class="keyword">do</span> you prefer placing config <span class="keyword">for</span> Babel, PostCSS, ESLint, etc.? (Use arrow keys)</span><br><span class="line">&gt; In dedicated config files <span class="comment">// 单独放在一个文件</span></span><br><span class="line">  In package.json <span class="comment">// 放在package.json</span></span><br></pre></td></tr></table></figure></li><li><p>是否保存配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Save <span class="keyword">this</span> <span class="keyword">as</span> a preset <span class="keyword">for</span> future projects? (Y/n) <span class="comment">// 是否记录一下以便下次继续使用这套配置</span></span><br><span class="line"><span class="comment">// 选保存之后，会让你写一个配置的名字：</span></span><br><span class="line">Save preset <span class="keyword">as</span>:  name <span class="comment">// 然后你下次进入配置可以直接使用你这次的配置了</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="通过vue-ui进行项目构建"><a href="#通过vue-ui进行项目构建" class="headerlink" title="通过vue ui进行项目构建"></a>通过<code>vue ui</code>进行项目构建</h3><ol><li>在命令行执行如下代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure><img src="../image/vuecli7.png" alt=""></li><li>浏览器弹出如图弹框<br><img src="../image/vuecli8.png" alt=""></li><li>打开项目管理器 -&gt; 创建 -&gt; 在此创建新项目<br><img src="../image/vuecli9.png" alt=""></li><li>在详情中创建项目名 -&gt; 下一步<br><img src="../image/vuecli10.png" alt=""></li><li>预设中选择手动 -&gt; 下一步<br><img src="../image/vuecli11.png" alt=""></li><li>在功能中选自自己需要的配置 -&gt; 下一步<br><img src="../image/vuecli12.png" alt=""></li><li>在配置中选择自己需要的配置 -&gt; 创建项目<br><img src="../image/vuecli13.png" alt=""></li><li>保存预设名(我选择了不保存)<br><img src="../image/vuecli14.png" alt=""></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
