<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue</title>
      <link href="/vue/"/>
      <url>/vue/</url>
      
        <content type="html"><![CDATA[<h2 id="vue是什么？"><a href="#vue是什么？" class="headerlink" title="vue是什么？"></a>vue是什么？</h2><ol><li><p>Vue是一套构建用户界面的渐进式框架，也是一个非常典型的 MVVM 的程序结构（model-view-viewmodel）。</p></li><li><p>官方解释：Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。</p><ul><li>渐变式框架：你可以把vue用在已经有的项目中，进行页面的渲染，也可以利用vue的全家桶创建大型项目,vue不是把所有东西集成在一起，而是你需要什么，在vue中添加相应的工具(例如vue-resource,vuex)，vue实现是加法操作</li><li>MVC: 是后端(node.js)的程序结构，M是model的缩写代表数据层，V是view的缩写代表视图层，C是controller的缩写代表逻辑层</li><li>MVVM: 是前端的程序结构，是MVC中的V进一步划分，M是每一个页面的单独数据，V是每个页面的html结构，VM是页面的调度者，MVVM 是Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对View 和 Model 的双向数据绑定，这使得Model 的状态改变可以自动传递给 View，即所谓的<code>数据双向绑定</code>。<br><img src="../image/vue1.png" alt=""></li><li>自底向上逐层应用：由基层开始做起，把基础的东西写好，再逐层往上添加效果和功能。</li></ul><hr></li></ol><h2 id="vue的安装"><a href="#vue的安装" class="headerlink" title="vue的安装"></a>vue的安装</h2><h3 id="vue的兼容性"><a href="#vue的兼容性" class="headerlink" title="vue的兼容性"></a>vue的兼容性</h3><ul><li>Vue 不支持 IE8 及以下版本，因为 Vue 使用了 IE8 无法模拟的 ECMAScript 5 特性。但它支持所有兼容   ECMAScript 5 的浏览器</li></ul><h3 id="Vue-Detools"><a href="#Vue-Detools" class="headerlink" title="Vue Detools"></a>Vue Detools</h3><ul><li>在使用 Vue 时，我们推荐在你的浏览器上安装 <a href="https://github.com/vuejs/vue-devtools#vue-devtools" target="_blank" rel="noopener">Vue Detools</a>。它允许你在一个更友好的界面中审查和调试 Vue 应用。</li></ul><h3 id="直接-lt-script-gt-引入"><a href="#直接-lt-script-gt-引入" class="headerlink" title="直接&lt;script&gt;引入"></a>直接<code>&lt;script&gt;</code>引入</h3><ul><li><p>直接下载并用 <code>&lt;script&gt;</code>标签引入，Vue 会被注册为一个全局变量。</p><blockquote><p>注意：在开发环境下不要使用压缩版本，不然你就失去了所有常见错误相关的警告!</p></blockquote></li><li><p>csdn<br>对于制作原型或学习，你可以这样使用最新版本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>对于生产环境，我们推荐链接到一个明确的版本号和构建文件，以避免新版本造成的不可预期的破坏：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.6.11"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><pre><code>在用 Vue 构建大型应用时推荐使用 NPM 安装。NPM 能很好地和诸如 webpack 或 Browserify 模块打包器配合使用。同时 Vue 也提供配套工具来开发单文件组件。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 最新稳定版</span><br><span class="line">$ npm install vue</span><br></pre></td></tr></table></figure></code></pre><h3 id="命令行工具-CLI"><a href="#命令行工具-CLI" class="headerlink" title="命令行工具(CLI)"></a>命令行工具(CLI)</h3><blockquote><p>vue 提供了一个官方的 CLI，为单页面应用 (SPA) 快速搭建繁杂的脚手架。它为现代前端工作流提供了     batteries-included 的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以 及生产环境可用的构建版本。更多详情可查阅 Vue CLI 的文档。</p></blockquote><h3 id="对不同版本的理解-以后更新"><a href="#对不同版本的理解-以后更新" class="headerlink" title="对不同版本的理解(以后更新)"></a>对不同版本的理解(以后更新)</h3><h2 id="与vue的第一次相见"><a href="#与vue的第一次相见" class="headerlink" title="与vue的第一次相见"></a>与vue的第一次相见</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;!-- 将来 <span class="keyword">new</span> 的Vue实例，会控制这个 元素中的所有内容 --&gt;</span><br><span class="line">  &lt;!-- Vue 实例所控制的这个元素区域，就是我们的 V  --&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">// 2. 创建一个Vue的实例</span></span><br><span class="line">    <span class="comment">// 当我们导入包之后，在浏览器的内存中，就多了一个 Vue 构造函数</span></span><br><span class="line">    <span class="comment">//  注意：我们 new 出来的这个 vm 对象，就是我们 MVVM中的 VM调度者</span></span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">'#app'</span>,  <span class="comment">// 表示，当前我们 new 的这个 Vue 实例，要控制页面上的哪个区域</span></span><br><span class="line">      <span class="comment">// 这里的 data 就是 MVVM中的 M，专门用来保存 每个页面的数据的</span></span><br><span class="line">      data: &#123; <span class="comment">// data 属性中，存放的是 el 中要用到的数据</span></span><br><span class="line">        msg: <span class="string">'欢迎学习Vue'</span> <span class="comment">// 通过 Vue 提供的指令，很方便的就能把数据渲染到页面上，程序员不再手动操作DOM元素了【前端的Vue之类的框架，不提倡我们去手动操作DOM元素了】</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure><h2 id="vue命令"><a href="#vue命令" class="headerlink" title="vue命令"></a>vue命令</h2><h3 id="v-cloak-v-html-v-text"><a href="#v-cloak-v-html-v-text" class="headerlink" title="v-cloak, v-html, v-text"></a>v-cloak, v-html, v-text</h3><ul><li><p><code>v-cloak</code>: 使用v-cloak能够解决 插值表达式闪烁的问题，并且不会替换标签中的内容，只会替换插值表达式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> &lt;style&gt;</span><br><span class="line">  [v-cloak] &#123;</span><br><span class="line">    <span class="comment">/* display: none; */</span></span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- 使用 v-cloak 能够解决 插值表达式闪烁的问题 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;p v-cloak&gt;++++++++ &#123;&#123; msg &#125;&#125; ----------&lt;/</span>p&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="./</span>lib/vue<span class="number">-2.4</span><span class="number">.0</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string">    var vm = new Vue(&#123;</span></span><br><span class="line"><span class="string">      el: '#app',</span></span><br><span class="line"><span class="string">      data: &#123;</span></span><br><span class="line"><span class="string">        msg: '123',</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>v-text</code>: 自身标签就可以解决闪烁问题，但是会替换标签中所有的内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;h4 v-text=<span class="string">"msg"</span>&gt;==================&lt;<span class="regexp">/h4&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- 默认 v-text 是没有闪烁问题的 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- v-text会覆盖元素中原本的内容，但是 插值表达式  只会替换自己的这个占位符，不会把 整个元素的内容清空 --&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  &lt;script src=<span class="string">"./lib/vue-2.4.0.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">    var vm = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">      el: '#app',</span></span><br><span class="line"><span class="regexp">      data: &#123;</span></span><br><span class="line"><span class="regexp">        msg: '123',</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>v-html</code>: 用于转化html标签的数据, 也会替换标签中的内容</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">     &lt;div v-html=<span class="string">"msg2"</span>&gt;<span class="number">1212112</span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">   &lt;script src="./</span>lib/vue<span class="number">-2.4</span><span class="number">.0</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   &lt;script&gt;</span></span><br><span class="line"><span class="string">     var vm = new Vue(&#123;</span></span><br><span class="line"><span class="string">       el: '#app',</span></span><br><span class="line"><span class="string">       data: &#123;</span></span><br><span class="line"><span class="string">         msg2: '&lt;h1&gt;哈哈，我是一个大大的H1， 我大，我骄傲&lt;/h1&gt;',</span></span><br><span class="line"><span class="string">       &#125;,</span></span><br><span class="line"><span class="string">     &#125;)</span></span><br><span class="line"><span class="string">   &lt;/script&gt;</span></span><br><span class="line"><span class="string"> &lt;/body&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><ul><li><p>v-bind简写<code>:</code> ,用于数据把数据初始化在html页面(例如照片的渲染:src)</p></li><li><p>v-bind不仅能够绑定数据，而且能够在v-bind中书写<strong>表达式</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;!-- v-bind: 是 Vue中，提供的用于绑定属性的指令 --&gt;</span><br><span class="line">    &lt;!-- <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> <span class="attr">v-bind:title</span>=<span class="string">"mytitle + '123'"</span>&gt;</span> --&gt;</span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 注意： v-bind: 指令可以被简写为 :要绑定的属性 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- v-bind 中，可以写合法的JS表达式 --&gt;</span></span></span><br><span class="line">    &lt;input type="button" value="按钮" :title="mytitle + '123'"&gt;</span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.4.0.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    var vm = new Vue(&#123;</span><br><span class="line">      el: '#app',</span><br><span class="line">      data: &#123;</span><br><span class="line">        mytitle: '这是一个自己定义的title'</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span>click</span><br></pre></td></tr></table></figure><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><ul><li><p>v-on简写@(v-on:click简写为@click)</p></li><li><p>用于绑定各种事件(例如常见的click)</p></li><li><p>v-on会通过绑定在自己身上的变量，在methods中寻找自己的函数进行运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"button"</span> value=<span class="string">"按钮"</span> @click=<span class="string">"show"</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="./</span>lib/vue<span class="number">-2.4</span><span class="number">.0</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string">    var vm = new Vue(&#123;</span></span><br><span class="line"><span class="string">      el: '#app',</span></span><br><span class="line"><span class="string">      data: &#123;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      methods: &#123; // 这个 methods属性中定义了当前Vue实例所有可用的方法</span></span><br><span class="line"><span class="string">        show: function () &#123;</span></span><br><span class="line"><span class="string">          alert('Hello')</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/Hexo/"/>
      <url>/Hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli</title>
      <link href="/vue-cli/"/>
      <url>/vue-cli/</url>
      
        <content type="html"><![CDATA[<p>Vue.js 开发的标准工具</p><a id="more"></a><h2 id="vue-cli脚手架的安装"><a href="#vue-cli脚手架的安装" class="headerlink" title="vue-cli脚手架的安装"></a>vue-cli脚手架的安装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"># OR</span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><hr><h2 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h2><p><code>vue create hello-world</code></p><hr><h3 id="项目搭建过程"><a href="#项目搭建过程" class="headerlink" title="项目搭建过程"></a>项目搭建过程</h3><ol><li><p>命令行输入<code>vue create 文件名</code><br><img src="../image/vuecli1.png" alt=""></p><ul><li><p>Please pick a preset: (Use arrow keys) preset是之前预设过的配置(如果没有选择下面两个选项, 如果有选择直接安装)enter</p></li><li><p>default (babel, eslint): 默认配置(直接enter)非常适合快速创建一个新的项目的原型, 但是没有带任何辅助功能的npm包</p></li><li><p>Manually select feature: 手动配置(按下方向键↓调换选项)是我们所需要的面向生产的项目，提供可选择的npm包</p></li></ul></li><li><p>vue配置 (方向键↑和↓进行切换，空格键进行确定)<br><img src="../image/vuecli2.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">? Please pick a preset: Manually select features</span><br><span class="line">? Check the features needed <span class="keyword">for</span> your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)</span><br><span class="line">&gt;(*) Babel  <span class="comment">// Babel 是一个 JavaScript 编译器</span></span><br><span class="line">( ) TypeScript <span class="comment">// javaScript的超集</span></span><br><span class="line">( ) Progressive Web App (PWA) Support <span class="comment">// 渐变式web应用程序</span></span><br><span class="line">( ) Router <span class="comment">// vue-router(vue路由)</span></span><br><span class="line">( ) Vuex <span class="comment">// vuex(vue的状态管理模式)</span></span><br><span class="line">( ) CSS Pre-processors <span class="comment">// css 预处理器</span></span><br><span class="line">(*) Linter / Formatter <span class="comment">// 代码风险检测和格式化(如：Eslnt)</span></span><br><span class="line">( ) Unit Testing <span class="comment">// 单元测试</span></span><br><span class="line">( ) E2E Testing <span class="comment">// e2e测试</span></span><br></pre></td></tr></table></figure></li><li><p>Router<br><img src="../image/vuecli3.png" alt=""></p><ul><li>首先会让你选择是否使用history router: Vue-Router有两种模式分别是hash和history(建议选择no), 这样直接可以使用， 如果想使用可以查看下面的方法尽享配置</li><li>如果想切换到history模式,在路由中填上如下代码:<a href="https://router.vuejs.org/zh/guide/essentials/history-mode.html" target="_blank" rel="noopener">具体配置</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [...]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>CSS Pre-processors(根据自己的需要选择配置)<br><img src="../image/vuecli4.png" alt=""></p><ul><li>Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目</li><li>Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言。包含了 Less 语言以及利用 JavaScript 开发的用于将 Less 样式转换成 CSS 样式的 Less.js 工具。</li><li>Stylus - 富有表现力的、动态的、健壮的CSS</li></ul></li><li><p>Linter / Formatter(如下是代码检测错误的不同版本, 根据自己的需要选择配置)<br><img src="../image/vuecli5.png" alt=""></p><ul><li>ESLint with error prevention only(仅仅给你报语法上的错误，不给你代码进行规范)</li><li>ESLint + Airbnb config(这三个选项不仅有语法错误上的提示，而且有自己不同的代码规范原则，想进行具体了解，自行看官方文档)<br>ESLint + Standard config<br>ESLint + Prettier</li></ul></li><li><p>把babel,postcss,eslint这些配置文件放哪：(建议选择In dedicated config files，这样不会时package.json太过杂乱)<br><img src="../image/vuecli6.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? Where <span class="keyword">do</span> you prefer placing config <span class="keyword">for</span> Babel, PostCSS, ESLint, etc.? (Use arrow keys)</span><br><span class="line">&gt; In dedicated config files <span class="comment">// 单独放在一个文件</span></span><br><span class="line">  In package.json <span class="comment">// 放在package.json</span></span><br></pre></td></tr></table></figure></li><li><p>是否保存配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Save <span class="keyword">this</span> <span class="keyword">as</span> a preset <span class="keyword">for</span> future projects? (Y/n) <span class="comment">// 是否记录一下以便下次继续使用这套配置</span></span><br><span class="line"><span class="comment">// 选保存之后，会让你写一个配置的名字：</span></span><br><span class="line">Save preset <span class="keyword">as</span>:  name <span class="comment">// 然后你下次进入配置可以直接使用你这次的配置了</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="通过vue-ui进行项目构建"><a href="#通过vue-ui进行项目构建" class="headerlink" title="通过vue ui进行项目构建"></a>通过<code>vue ui</code>进行项目构建</h3><ol><li>在命令行执行如下代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure><img src="../image/vuecli7.png" alt=""></li><li>浏览器弹出如图弹框<br><img src="../image/vuecli8.png" alt=""></li><li>打开项目管理器 -&gt; 创建 -&gt; 在此创建新项目<br><img src="../image/vuecli9.png" alt=""></li><li>在详情中创建项目名 -&gt; 下一步<br><img src="../image/vuecli10.png" alt=""></li><li>预设中选择手动 -&gt; 下一步<br><img src="../image/vuecli11.png" alt=""></li><li>在功能中选自自己需要的配置 -&gt; 下一步<br><img src="../image/vuecli12.png" alt=""></li><li>在配置中选择自己需要的配置 -&gt; 创建项目<br><img src="../image/vuecli13.png" alt=""></li><li>保存预设名(我选择了不保存)<br><img src="../image/vuecli14.png" alt=""></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
